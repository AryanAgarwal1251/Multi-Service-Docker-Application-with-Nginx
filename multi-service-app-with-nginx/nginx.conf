worker_processes 1;

events { worker_connections 1024; }

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    client_max_body_size 200M;  # supports large uploads (e.g., ZIP datasets)
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # --- Frontend Streamlit --- #
    upstream frontend_cluster {
        server frontend:8501;
        server backup-frontend:8502 backup;  # mark backup to only be used if primary is down
    }

    # --- ML Service --- #
    upstream ml_cluster {
        server ml-service:5000;
        server backup-ml-service:5000 backup;  # fix backup port from 5001 to 5000 if backup uses same port
    }

    # --- Analysis Service --- #
    upstream analysis_cluster {
        server analysis-service:5050;
        server backup-analysis-service:5051 backup;
    }

    # --- Logging Service --- #
    upstream logging_cluster {
        server logging-service:6000;
    }

    server {
        listen 80;

        # Frontend proxy - root path
        location / {
            proxy_pass http://frontend_cluster;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /frontend/ {
            proxy_pass http://frontend_cluster/;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /frontend {
            return 301 /frontend/;
        }
        # ML serving proxy
        location /sentiment/ {
            proxy_pass http://ml_cluster/;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Analysis proxy
        location /analysis/ {
            proxy_pass http://analysis_cluster;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy for POST log entry
        location /log_post {
            proxy_pass http://logging_cluster/log_post;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy for GET logs retrieval
        location /log_get {
            proxy_pass http://logging_cluster/log_get;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /log_get/ {
            return 301 /log_get;
        }

        location = /log_post/ {
            return 301 /log_post;
        }
    }
}
